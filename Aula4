import java.util.Scanner;

public class Programa {
    public static void main(String[] args) throws Exception {
     
        Scanner yg = new Scanner(System.in);


        int N = 0;
        System.out.print("Digite o valor de N (ordem da matriz): ");
        N = yg.nextInt();

        int[][] matriz = new int[N][N];

    
        System.out.println("Preencha a matriz de ordem " + N + "x" + N + ":");
        for (int i = 0; i < N; i++) {
            for (int j = 0; j < N; j++) {
                System.out.printf("Digite o valor para a posição [%d][%d]: ", i, j);
                matriz[i][j] = yg.nextInt();
            }
        }

        System.out.println("Diagonal Principal:");
        for (int i = 0; i < N; i++) {
            System.out.print(matriz[i][i] + " ");
        }


        int Negativos = 0;
        for (int i = 0; i < N; i++) {
            for (int j = 0; j < N; j++) {
                if (matriz[i][j] < 0) {
                    Negativos++;
                }
            }
        }

        System.out.println("\nQuantidade de valores negativos na matriz: " + Negativos);

        yg.close();


    }
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
import java.util.Scanner;

public class App {
    public static void main(String[] args) throws Exception {
      Scanner yg = new Scanner(System.in);

 int[][] matriz = new int[3][3];

        System.out.println("Preencha a matriz 3x3:");
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                System.out.printf("Digite o valor para a posição [%d][%d]: ", i, j);
                matriz[i][j] = yg.nextInt();
            }
        }


        int soma = 0;
        boolean quadMag = true;

     
        for (int j = 0; j < 3; j++) {
            soma += matriz[0][j];
        }


        for (int i = 1; i < 3; i++) {
            int somaLinha = 0;
            int somaColuna = 0;

            for (int j = 0; j < 3; j++) {
                somaLinha += matriz[i][j];
                somaColuna += matriz[j][i];
            }

            if (somaLinha != soma || somaColuna != soma) {
                quadMag = false;
                break;
            }
        }

        int somaDiagonalPrincipal = matriz[0][0] + matriz[1][1] + matriz[2][2];
        if (somaDiagonalPrincipal != soma) {
            quadMag = false;
        }

        int somaDiagonalSecundaria = matriz[0][2] + matriz[1][1] + matriz[2][0];
        if (somaDiagonalSecundaria != soma) {
            quadMag = false;
        }

    
        if (quadMag) {
            System.out.println("É um quadrado mágico!");
        } else {
            System.out.println("Não é um quadrado mágico.");
        }

        yg.close();
    }
}
